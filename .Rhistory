na.oz_month
by(na.oz_month, Month)
by(na.oz, Month)
by(na.oz, na.oz$Month)
by(na.oz, na.oz$Month, function(x) x)
by(na.oz, na.oz$Month, function(x){
cur.month <- x[1, "Month"]
})
by(na.oz, na.oz$Month, function(x){
cur.month <- x[1, "Month"]
ave.oz[x[["Month"]][[1]]]
})
by(na.oz, na.oz$Month, function(x){
cur.month <- x[1, "Month"]
ave.oz[cur.month]
})
by(na.oz, na.oz$Month, function(x){
cur.month <- x[1, "Month"]
ave.oz[cur.month]
class(x[1, "Month"])
})
by(na.oz, na.oz$Month, function(x){
cur.month <- unique(x[1, "Month"])
ave.oz[cur.month]
})
by(na.oz, na.oz$Month, function(x){
cur.month <- unique(x[1, "Month"])
ave.oz[cur.month]
unique(x[1, "Month"])
})
by(na.oz, na.oz$Month, function(x){
rep(ozone_ave[1], nrow(x))
})
ave.oz[1]
ave.oz["1"]
ave.oz["5"]
by(na.oz, na.oz$Month, function(x){
cur.month <- as.character(unique(x[["Month"]]))
rep(ozone_ave[1], nrow(x))
})
by(na.oz, na.oz$Month, function(x){
cur.month <- as.character(unique(x[["Month"]]))
rep(ozone_ave[cur.month], nrow(x))
})
ave.oz <- tapply(air$Ozone, air$Month, mean, na.rm = T, round = 1)
ave.oz
?round
ave.oz <- round(tapply(air$Ozone, air$Month, mean, na.rm = T), digit = 0)
ave.oz
ave.oz <- as.integer(tapply(air$Ozone, air$Month, mean, na.rm = T))
ave.oz
by(na.oz, na.oz$Month, function(x){
cur.month <- as.character(unique(x[["Month"]]))
class(rep(ozone_ave[cur.month], nrow(x)))
})
ave.oz <- round(tapply(air$Ozone, air$Month, mean, na.rm = T), digit = 0)
na.oz <- air[is.na(air$Ozone), c("Ozone", "Month")]
by(na.oz, na.oz$Month, function(x){
cur.month <- as.character(unique(x[["Month"]]))
class(rep(ozone_ave[cur.month], nrow(x)))
})
by(na.oz, na.oz$Month, function(x){
cur.month <- as.character(unique(x[["Month"]]))
rep(ozone_ave[cur.month], nrow(x))
})
by(na.oz, na.oz$Month, function(x){
cur.month <- as.character(unique(x[["Month"]]))
rep(ave.oz[cur.month], nrow(x))
})
impute <- by(na.oz, na.oz$Month, function(x){
cur.month <- as.character(unique(x[["Month"]]))
rep(ave.oz[cur.month], nrow(x))
})
impute
class(impute)
unlist(impute)
air$Ozone[is.na(air$Ozone)] <- unlist(impute)
air$Ozone[is.na(air$Ozone)]
unlist(impute)
air$Ozone[is.na(air$Ozone)]
i <- 1
a <- tapply(air[missing], air$Month[missing], function(x){
x <- rep(ozone_ave[i], length(x))
i <<- i + 1
x
})
i <- 1
a <- tapply(air$Ozone[missing], air$Month[missing], function(x){
x <- rep(ozone_ave[i], length(x))
i <<- i + 1
x
})
a
unlist(a)
unlist(impute)
air$Ozone[missing] <- unlist(a)
air$Ozone[missing]
air$Ozone[is.na(air$Ozone)] <- unlist(impute)
air$Ozone[is.na(air$Ozone)]
air$Ozone[missing] <- unlist(impute)
air$Ozone[missing]
air$Ozone[is.na(air$Ozone)] <- unlist(impute)
air$Ozone[is.na(air$Ozone)]
missing <- is.na(air$Ozone)
missing
air <- airquality
air$Ozone[is.na(air$Ozone)] <- unlist(impute)
air$Ozone[is.na(air$Ozone)]
air
?colMeans
data(airquality)
dataset(airquality)
data(airquality)
head(airquality)
ave_step_allday
data
new_data <- data
tf.step <- is.na(new_data$steps)
na.step <- data[tf.step, c("steps", "interval")]
input <- by(na.step, na.step$interval, function(x){
cur.interval <- as.character(unique(x[["interval"]]))
rep(ave_step_allday[cur.interval], nrow(x))
})
new_data$steps[tf.step] <- unlist(input)
new_data[2210, ]
new_data[is.na(new_data$steps)]
new_data[is.na(new_data$steps), ]
new_data <- data
tf.step <- is.na(new_data$steps)
sum(tf.step)
na.step <- data[tf.step, c("steps", "interval")]
na.step
input <- by(na.step, na.step$interval, function(x){
cur.interval <- as.character(unique(x[["interval"]]))
rep(ave_step_allday[cur.interval], nrow(x))
})
input
input <- by(na.step, na.step$interval, function(x){
cur.interval <- as.character(unique(x[["interval"]]))
rep(ave_step_allday[cur.interval], nrow(x))
})
unsplit(input)
?unsplit
unsplit(input, interval)
unsplit(input, input$interval)
new_data <- data
tf.step <- is.na(new_data$steps)
na.step <- data[tf.step, c("steps", "interval")]
sub.na.step <- split(na.step, na.step$interval)
<- split(na.step, na.step$interval)
sub.na.step
unsplit(sub.na.step, sub.na.step$interval)
unsplit(sub.na.step, sub.na.step$steps)
unsplit(sub.na.step, rownames(sub.na.step))
?do.call
new <- do.call("rbind", input)
new
input <- by(na.step, na.step$interval, function(x){
cur.interval <- as.character(unique(x[["interval"]]))
rep(ave_step_allday[cur.interval], nrow(x))
})
input
new <- do.call("rbind", input)
new
View(new)
by(na.step, na.step$interval, function(x){
cur.interval <- as.character(unique(x[["interval"]]))
rep(ave_step_allday[cur.interval], nrow(x))
})
ave_step_allday
round(tapply(air$Ozone, air$Month, mean, na.rm = T), digit = 0)
na.step
rownames(na.step)
na.step$rownames <- rownames(na.step)
na.step
?order
na.step[order(interval), ]
na.step[order(na.step$interval), ]
?by
input <- by(order.interval, order.interval$interval, function(x){
cur.interval <- as.character(unique(x[["interval"]]))
rep(ave_step_allday[cur.interval], nrow(x))
}, simplify = T)
new_data <- data
tf.step <- is.na(new_data$steps)
na.step <- data[tf.step, c("steps", "interval")]
na.step$rownames <- rownames(na.step)
order.interval <- na.step[order(na.step$interval), ]
input <- by(order.interval, order.interval$interval, function(x){
cur.interval <- as.character(unique(x[["interval"]]))
rep(ave_step_allday[cur.interval], nrow(x))
}, simplify = T)
input
input <- by(order.interval, order.interval$interval, function(x){
cur.interval <- as.character(unique(x[["interval"]]))
rep(ave_step_allday[cur.interval], nrow(x))
x$steps <- rep(ave_step_allday[cur.interval], nrow(x))
})
input
input <- by(order.interval, order.interval$interval, function(x){
cur.interval <- as.character(unique(x[["interval"]]))
rep(ave_step_allday[cur.interval], nrow(x))
x$steps <- rep(ave_step_allday[cur.interval], nrow(x))
x
})
input
unlist(input)
class(input)
?by
input
do.call(rbind, input)
?do.call
ave_step_allday
rownames(ave_step_allday)
label(ave_step_allday)
labels(ave_step_allday)
labels(ave.oz[4])
new_data <- data
tf.step <- is.na(new_data$steps)
na.step <- data[tf.step, c("steps", "interval")]
na.step$rownames <- rownames(na.step)
order.interval <- na.step[order(na.step$interval), ]
input.by <- by(order.interval, order.interval$interval, function(x){
cur.interval <- as.character(unique(x[["interval"]]))
x$steps <- rep(ave_step_allday[cur.interval], nrow(x))
x
})
input.by
input.df <- do.call(rbind, input)
input.df
reorder <- input.df[order(input.df$rownames), ]
reorder
class(input.df$rownames)
na.step$rownames <- as.integer(rownames(na.step))
order.interval <- na.step[order(na.step$interval), ]
input.by <- by(order.interval, order.interval$interval, function(x){
cur.interval <- as.character(unique(x[["interval"]]))
x$steps <- rep(ave_step_allday[cur.interval], nrow(x))
x
})
input.df <- do.call(rbind, input)
reorder <- input.df[order(input.df$rownames), ]
reorder
class(input.df$rownames)
?rep
air[air$Month==ave.oz[Month],]
air[air$Month==ave.oz$Month,]
air[air$Month==ave.oz[[Month]],]
air[air$Month==ave.oz[[air$Month]],]
air[air$Month==ave.oz[air$Month],]
air
air <- airquality
ave.oz[air$Month==ave.oz[air$Month], ]
ave.oz[air$Month==ave.oz[air$Month] ]
ave.oz[air$Month]
air$Month
ave.df <- cbind(ave.oz, labels(ave.oz))
ave.df
labels(ave.oz)
ave.oz <- round(tapply(air$Ozone, air$Month, mean, na.rm = T), digit = 0)
labels(ave.oz)
ave.df <- cbind(ave.oz, unlist(labels(ave.oz)))
ave.df
ave.df <- as.integer(cbind(ave.oz, unlist(labels(ave.oz))))
ave.df
ave.df <- cbind(ave.oz, as.integer(unlist(labels(ave.oz))))
ave.df
class(ave.df)
labels <- labels(ave.oz)
class(labels)
class(ave.oz)
labels <- unlist(labels(ave.oz))
class(labels)
labels <- as.integer(unlist(labels(ave.oz)))
class(labels)
ave.df <- as.data.frame(cbind(ave.oz, labels))
ave.df
sum(is.na(Solar.R))
sum(is.na(air$Solar.R))
sum(is.na(air$Ozone))
sum(is.na(air$Temp))
ave.oz <- round(tapply(air$Ozone, air$Day, mean, na.rm = T), digit = 0)
ave.oz
labels <- as.integer(unlist(labels(ave.oz)))
ave.df <- as.data.frame(cbind(ave.oz, labels))
tf.oz <- is.na(air$Ozone)
na.oz <- air[tf.oz, c("Ozone", "Day")]
unique(na.oz$Day)
merge(ave.df, na.oz, by = "Day")
Day <- as.integer(unlist(labels(ave.oz)))
ave.df <- as.data.frame(cbind(ave.oz, labels))
tf.oz <- is.na(air$Ozone)
na.oz <- air[tf.oz, c("Ozone", "Day")]
merge(ave.df, na.oz, by = "Day")
ave.df <- as.data.frame(cbind(ave.oz, Day))
tf.oz <- is.na(air$Ozone)
na.oz <- air[tf.oz, c("Ozone", "Day")]
merge(ave.df, na.oz, by = "Day")
na.oz
merge(ave.df, na.oz, by = "Day", sort = F)
ave.df
merge(na.oz, ave.df, by = "Day", sort = F)
merge(na.oz, ave.df, by = "Day")
merge(na.oz, ave.df, by = "Day", sort = F)
na.oz
na.oz$row <- rownames(na.oz)
na.oz
merge(na.oz, ave.df, by = "Day")
merged <- merge(na.oz, ave.df, all.x = T, by = "Day")
merged <- merge(na.oz, ave.df, all.y = T, by = "Day")
merge(na.oz, ave.df, all.y = T, by = "Day")
merge(na.oz, ave.df, all.x = T, by = "Day")
order <- merged[order(merged, merged$row), ]
?order
order <- merged[order(merged$row), ]
order
na.oz
?rank
class(na.oz$row)
na.oz$row <- as.integer(rownames(na.oz))
merged <- merge(na.oz, ave.df, all.x = T, by = "Day")
order <- merged[order(merged$row), ]
order
air$Ozone[tf.oz] <- order
air$Ozone[tf.oz] <- order$ave.oz
air$Ozone[tf.oz]
head(air)
new_data <- data
tf.step <- is.na(new_data$steps)
na.step <- data[tf.step, c("steps", "interval")]
na.step$row <- as.integer(rownames(na.step))
head(na.step)
interval <- as.integer(unlist(labels(ave_step_allday)))
interval
ave.df <- as.data.frame(cbind(ave_step_allday, interval))
ave.df
merged <- merge(na.step, ave.df, all.x = T, by = "interval")
head(merged)
order <- merged[order(merged$row), ]
head(order)
new_data$steps[tf.step] <- order$steps
head(new_data)
new_data$steps[tf.step] <- order$ave_step_allday
head(new_data)
new_data <- data
tf.step <- is.na(new_data$steps)
na.step <- data[tf.step, c("steps", "interval")]
na.step$row <- as.integer(rownames(na.step))
interval <- as.integer(unlist(labels(ave_step_allday)))
ave.df <- as.data.frame(cbind(ave_step_allday, interval))
merged <- merge(na.step, ave.df, all.x = T, by = "interval")
order <- merged[order(merged$row), ]
new_data$steps[tf.step] <- order$ave_step_allday
sum(is.na(new_data$steps))
new_total_step_per_day <- tapply(new_data, new_data$Date, sum)
new_total_step_per_day <- tapply(new_data$steps, new_data$Date, sum)
View(new_data)
new_data[10000]
new_data[10000,]
new_total_step_per_day <- tapply(new_data$steps, new_data$date, sum)
new_total_step_per_day
new_mean_step <- mean(new_total_step_per_day)
new_mean_step
max(ave_step_allday)
ve_step_allday[max(ave_step_allday)]
ave_step_allday[max(ave_step_allday)]
new_data$weektime <- as.factor(ifelse(weekdays(new_data$date) %in% c("Saturday","Sunday"),"weekend", "weekday"))
data_weekday <- new_data[new_data$weektime=="weekday",]
subweekday <- split(data_weekday, data_weekday$interval)
weekday_step <- sapply(subweekday, function(x){
mean(x$steps)
})
lattice(interval ~ steps | weektime)
library(lattice)
attach(new_data)
lattice(interval ~ steps | weektime)
detach(new_data)
?lattice
lattice(interval ~ steps | weektime)
xyplot(interval ~ steps | weektime)
xyplot(new_data$interval ~ new_data$steps | new_data$weektime)
xyplot(new_data$steps ~new_data$interval | new_data$weektime, layout = c(2, 1))
xyplot(new_data$steps ~new_data$interval | new_data$weektime, layout = c(1, 2))
?xyplot
xyplot(new_data$steps ~new_data$interval | new_data$weektime, layout = c(1, 2), type = "l")
all.ave <- merge(new_data, ave.df, all.x = T, by = "interval")
head(all.ave)
xyplot(all.ave$ave_step_allday ~ all.ave$interval | new_data$weektime, layout = c(1, 2), type = "l")
xyplot(all.ave$ave_step_allday ~ all.ave$interval | all.ave$weektime, layout = c(1, 2), type = "l")
head(all.ave)
head(data)
?tapply
tapply(all.ave$steps, c(all.ave$interval, all.ave$weektime), mean)
tapply(all.ave$steps, list(all.ave$interval, all.ave$weektime), mean)
list(all.ave$interval, all.ave$weektime)
head(list(all.ave$interval, all.ave$weektime))
str(list(all.ave$interval, all.ave$weektime))
week.ave <- tapply(all.ave$steps, list(all.ave$interval, all.ave$weektime), mean)
week.ave$interval <- rownames(week.ave)
week.ave
week.ave <- as.data.frame(week.ave)
week.ave
week.ave <- tapply(all.ave$steps, list(all.ave$interval, all.ave$weektime), mean)
week.ave <- as.data.frame(week.ave)
week.ave
week.ave$interval <- rownames(week.ave)
week.ave
week.ave[c(weekday, interval)]
head(week.ave)
week.ave[c("weekday", "interval")]
weekday$weektime <- rep("weekday", nrow(weekday))
weekday <- week.ave[c("weekday", "interval")]
weekday$weektime <- rep("weekday", nrow(weekday))
head(weekday)
colnames(weekday$weekday) <- c("steps")
colnames(weekday)
?colnames
colnames(weekday)[3] <- c("steps")
colnames(weekday)
colnames(weekday)[1] <- c("steps")
colnames(weekday)[3] <- c("weektime")
colnames(weekday)
weekend <- week.ave[c("weekend", "interval")]
weekend$weektime <- rep("weekend", nrow(weekend))
colnames(weekday)[1] <- c("steps")
week.ave <- rbind(weekday, weekend)
head(weekday)
head(weekend)
colnames(weekend)[1] <- c("steps")
week.ave <- rbind(weekday, weekend)
xyplot(week.ave$ ~ week.ave$interval | week.ave$weektime, layout = c(1, 2), type = "l")
xyplot(week.ave$steps ~ week.ave$interval | week.ave$weektime, layout = c(1, 2), type = "l")
week.ave
xyplot(week.ave$steps ~ week.ave$interval | week.ave$weektime, layout = c(1, 2), type = "l")
head(week.ave)
week.ave <- as.factor(week.ave$weektime)
xyplot(week.ave$steps ~ week.ave$interval |week.ave$weektime, layout = c(1, 2), type = "l")
week.ave <- tapply(all.ave$steps, list(all.ave$interval, all.ave$weektime), mean)
week.ave <- as.data.frame(week.ave)
week.ave$interval <- rownames(week.ave)
## weekday data.frame
weekday <- week.ave[c("weekday", "interval")]
weekday$weektime <- rep("weekday", nrow(weekday))
colnames(weekday)[1] <- c("steps")
## weekend data.fram
weekend <- week.ave[c("weekend", "interval")]
weekend$weektime <- rep("weekend", nrow(weekend))
colnames(weekend)[1] <- c("steps")
## bind two data.frame
week.ave <- rbind(weekday, weekend)
week.ave$weektime <- as.factor(week.ave$weektime)
xyplot(week.ave$steps ~ week.ave$interval |week.ave$weektime, layout = c(1, 2), type = "l")
str(week.ave)
xyplot(week.ave$steps ~ week.ave$interval, layout = c(1, 2), type = "l")
week.ave[1,2]
week.ave[1,1]
xyplot(week.ave$steps ~ week.ave$interval |week.ave$weektime, layout = c(1, 2), type = "p")
xyplot(week.ave$steps ~ week.ave$interval |week.ave$weektime, layout = c(1, 2), type = "b")
plot(weekday$steps, weekday$interval, type = "l")
plot(weekday$interval,weekday$steps,  type = "l")
head(weekday)
xyplot(week.ave$steps ~ week.ave$interval |week.ave$weektime, layout = c(1, 2), type = "b")
plot(weekday$interval,weekday$steps,  type = "l")
plot(weekdend$interval,weekend$steps,  type = "l")
plot(weekdend$interval,weekend$steps,  type = "l")
plot(weekday$interval,weekday$steps,  type = "l")
plot(weekdend$interval,weekend$steps,  type = "l")
par(mfrow=c(2,1), mar=c(0,0,0,0), oma = c(3, 3, 2, 2))
plot(weekday$interval,weekday$steps,  type = "l")
plot(weekdend$interval,weekend$steps,  type = "l")
weekday <- week.ave[c("weekday", "interval")]
weekday$weektime <- rep("weekday", nrow(weekday))
colnames(weekday)[1] <- c("steps")
## weekend data.fram
weekend <- week.ave[c("weekend", "interval")]
weekend$weektime <- rep("weekend", nrow(weekend))
colnames(weekend)[1] <- c("steps")
par(mfrow=c(2,1), mar=c(0,0,0,0), oma = c(3, 3, 2, 2))
plot(weekday$interval,weekday$steps,  type = "l")
plot(weekdend$interval,weekend$steps,  type = "l")
plot(weekend$interval,weekend$steps,  type = "l")
xplot(air$Wind ~ air$Temp | air$Month)
xyplot(air$Wind ~ air$Temp | air$Month)
xyplot(air$Wind ~ air$Temp | air$Month, type = "l")
xyplot(air$Wind ~ air$Temp | air$Month, type = "p")
xyplot(all.ave$steps ~ all.ave$interval |all.ave$weektime, layout = c(1, 2), type = "b")
xyplot(all.ave$steps ~ all.ave$interval |all.ave$weektime, layout = c(1, 2), type = "l")
xyplot(week.ave$steps ~ week.ave$interval |week.ave$weektime, layout = c(1, 2), type = "l")
week.ave
week.ave <- tapply(all.ave$steps, list(all.ave$interval, all.ave$weektime), mean)
week.ave <- as.data.frame(week.ave)
week.ave$interval <- rownames(week.ave)
par(mfrow=c(2,1), mar=c(0,0,0,0), oma = c(3, 3, 2, 2))
plot(week.ave$interval, week.ave$weekday, type="l", axes=F)
grid(NULL,NULL, lty=2)
box("plot")
mtext("Weekday", side=4, line=0)
axis(2, at=seq(0,200,50), cex.axis=0.7,)
plot(week.ave$interval, week.ave$weekend, type="l", axes=F)
mtext("Weekend", side=4, line=0)
axis(2, at=seq(0,200,50), cex.axis=0.7)
axis(1, at=seq(0,2500,500), cex.axis=0.7)
grid(NULL,NULL, lty=2)
box()
mtext("Activity patterns comparision", side=3, outer=T, font=2, line=0.5)
mtext("Interval", side =1, outer = T, line=2)
mtext("Number of steps", side = 2, outer=T, line=2)
?data
data(USArrests)
USArrests
iris
?aggregate
